pre_computed = [
    [1, 0, 0, 0, 0, 0],
    [126130994, 623795096, 60831169, 969909541, 4240489, 282895104],
    [886919695, 946288886, 209641809, 526686160, 284233468, 515596143],
    [499015586, 250265748, 977439196, 33995059, 773304920, 609929463],
    [389315271, 830330343, 699772453, 308188609, 419031602, 115338509],
    [673561657, 579884284, 168286508, 883463666, 224283386, 791154896],
    [109619937, 45331439, 909924848, 268724206, 597286348, 414838249],
    [9340588, 739907106, 588026634, 565115761, 159456109, 467438804],
    [561487726, 353000483, 964211029, 199038357, 67471376, 774194771],
    [220227839, 989371410, 91138211, 622768561, 575749013, 141555380],
]

class Solution:
    def checkRecord(self, n: int) -> int:

        pre_computed_index = min(n//10000, len(pre_computed)-1)
        A0L0, A0L1, A0L2, A1L0, A1L1, A1L2 = pre_computed[pre_computed_index]
        n -= pre_computed_index * 10000

        for _ in range(n):
            new_A0L0 = (A0L0 + A0L1 + A0L2) % 1000000007
            new_A0L1 = A0L0
            new_A0L2 = A0L1
            new_A1L0 = (A0L0 + A0L1 + A0L2 + A1L0 + A1L1 + A1L2) % 1000000007
            new_A1L1 = A1L0
            new_A1L2 = A1L1
            A0L0, A0L1, A0L2, A1L0, A1L1, A1L2 = new_A0L0, new_A0L1, new_A0L2, new_A1L0, new_A1L1, new_A1L2
        return (A0L0 + A0L1 + A0L2 + A1L0 + A1L1 + A1L2) % 1000000007
